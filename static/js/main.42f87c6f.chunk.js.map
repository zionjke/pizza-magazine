{"version":3,"sources":["assets/img/pizza-logo.svg","assets/img/empty-cart.png","components/Button.jsx","components/Header.jsx","components/Categories.jsx","components/SortPopup.jsx","components/PizzaBlock/PizzaBlock.jsx","components/CartItem.jsx","redux/actions/pizzas.js","dal/api.js","redux/reducers/pizzas.js","components/PizzaBlock/LoadingBlock.jsx","pages/Home.jsx","redux/actions/filters.js","redux/actions/cart.js","pages/Cart.jsx","App.js","redux/reducers/cart.js","redux/reducers/filters.js","redux/store.js","index.js"],"names":["module","exports","Button","outline","onClick","className","children","add","classNames","Header","useSelector","cart","totalPrice","totalCount","width","src","logo","alt","to","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Categories","React","memo","items","onClickCategory","activeCategory","map","item","index","key","SortPopup","activeSortType","onClickSort","useState","visiblePopup","setVisiblePopup","sortRef","useRef","activeLabel","find","type","name","handleOutsideClick","e","path","composedPath","includes","current","useEffect","document","body","addEventListener","ref","PizzaBlock","id","imageUrl","price","types","sizes","onAddPizzaToCart","addedCount","availableTypes","availableSizes","activeType","setActiveType","indexOf","activeSize","setActiveSize","onSelectType","size","onSelectSize","CartItem","onRemoveCartItem","onMinus","onPlus","action","payload","loaded","api","sortBy","category","axios","get","order","initialState","isLoaded","LoadingBlock","props","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","categoryNames","sortItems","Home","dispatch","useDispatch","pizzas","filters","cartItems","onSelectCategory","useCallback","catIndex","setCategory","onSelectSortType","sortType","addPizzaToCart","a","response","data","getPizzas","length","Array","_","Cart","addedPizzas","Object","keys","itemId","onPlusItem","onMinusItem","window","confirm","obj","href","emptyCard","App","component","getTotalPrice","arr","reduce","sum","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","state","currentPizzaItems","newItems","values","allPizzas","concat","apply","currentTotalPrice","currentTotalCount","oldItems","slice","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.42f87c6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza-logo.f3327011.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.ceb2faf0.png\";","import React from \"react\";\r\nimport classNames from 'classnames'\r\n\r\nconst Button = ({outline,onClick,className,children,add}) => {\r\n    return (\r\n        <button onClick={onClick} className={classNames('button',className, {\r\n            'button--outline': outline\r\n            },\r\n            )}>\r\n            {children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport logo from \"../assets/img/pizza-logo.svg\";\r\nimport Button from \"./Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Header = () => {\r\n    const {totalPrice,totalCount} = useSelector(({cart}) => cart);\r\n\r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__logo\">\r\n                    <img width=\"38\" src={logo} alt=\"Pizza logo\"/>\r\n                    <div>\r\n                        <Link to={'/'}>\r\n                            <h1>Pizza Magazine</h1>\r\n                        </Link>\r\n                        <p>самая вкусная пицца во вселенной</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"header__cart\">\r\n                    <Link to={'/cart'}>\r\n                        <Button className='button--cart'>\r\n                            <span>{totalPrice} ₽</span>\r\n                            <div className=\"button__delimiter\"></div>\r\n                            <svg\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 18 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                            <span>{totalCount}</span>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header\r\n","import React,{useState} from \"react\";\r\n\r\nconst Categories = React.memo(({items,onClickCategory,activeCategory}) => {\r\n\r\n    return (\r\n        <div className=\"categories\">\r\n            <ul>\r\n                <li onClick={ () => onClickCategory(null)}\r\n                    className={`${activeCategory === null && 'active'}`}\r\n                >\r\n                    Все\r\n                </li>\r\n                {   items &&\r\n                items.map((item,index) =>\r\n                    <li className={`${activeCategory === index && 'active'}`}\r\n                        onClick={ () => onClickCategory(index)}\r\n                        key={`${item}_${index}`}\r\n                    >\r\n                        {item}\r\n                    </li>\r\n                )\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Categories","import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nconst SortPopup = React.memo(({items,activeSortType,onClickSort}) => {\r\n    const [visiblePopup,setVisiblePopup] = useState(false);\r\n    const sortRef = useRef(); // ссылка на DOM элемент\r\n    const activeLabel = items.find(item => item.type === activeSortType).name;\r\n\r\n    const toggleVisiblePopup = () => {\r\n        setVisiblePopup(!visiblePopup)\r\n    };\r\n\r\n    const onSelectItem = type => {\r\n        setVisiblePopup(false);\r\n        onClickSort(type)\r\n    };\r\n\r\n    const handleOutsideClick = (e) => {\r\n        const path = e.path || (e.composedPath && e.composedPath());\r\n        if(!path.includes(sortRef.current)) { // includes - проверка массива на наличие элемента в нем\r\n            setVisiblePopup(false)    // если кликнули вне области блока то срабатывает функция\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click',handleOutsideClick) //\r\n    },[]);\r\n\r\n    return (\r\n        <div ref={sortRef} className=\"sort\">\r\n            <div className=\"sort__label\">\r\n                <svg\r\n                    className={`${visiblePopup && 'rotated'}`}\r\n                    width=\"10\"\r\n                    height=\"6\"\r\n                    viewBox=\"0 0 10 6\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n                <b>Сортировка по:</b>\r\n                <span onClick={toggleVisiblePopup}>{activeLabel}</span>\r\n            </div>\r\n            {visiblePopup &&\r\n            <div className=\"sort__popup\">\r\n                <ul>\r\n                    {\r\n                        items.map((item,index) => <li key={`${item.type}_${index}`}\r\n                                                      className={`${activeSortType === item.type && 'active'}`}\r\n                                                      onClick={()=>onSelectItem(item)}>\r\n                            {item.name}\r\n                        </li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default SortPopup","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport {Button} from \"../index\";\r\n\r\n\r\nconst PizzaBlock = ({id,name, imageUrl, price, types, sizes,onAddPizzaToCart,addedCount}) => {\r\n    const availableTypes = ['тонкое', 'традиционное'];\r\n    const availableSizes = [26, 30, 40];\r\n    const [activeType, setActiveType] = React.useState(types[0]);\r\n    const [activeSize, setActiveSize] = React.useState(availableSizes.indexOf(sizes[0]));\r\n\r\n    const onSelectType = (index) => {\r\n        setActiveType(index)\r\n    };\r\n\r\n    const onSelectSize = (index) => {\r\n        setActiveSize(index)\r\n    };\r\n\r\n        const handleAddPizza = () => {\r\n            const item = {\r\n                id,\r\n                name,\r\n                imageUrl,\r\n                price,\r\n                size:availableSizes[activeSize],\r\n                type:availableTypes[activeType]\r\n            };\r\n            onAddPizzaToCart(item)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <img\r\n                className=\"pizza-block__image\"\r\n                src={imageUrl}\r\n                alt=\"Pizza\"\r\n            />\r\n            <h4 className=\"pizza-block__title\">{name}</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {\r\n                        availableTypes.map((type, index) =>\r\n                            <li\r\n                                key={type}\r\n                                className={classNames({\r\n                                    'active': activeType === index,\r\n                                    'disabled': !types.includes(index)\r\n                                })}\r\n                                onClick={() => onSelectType(index)}>\r\n                                {type}\r\n                            </li>\r\n                        )}\r\n\r\n                </ul>\r\n                <ul>\r\n                    {\r\n                        availableSizes.map((size, index) =>\r\n                            <li\r\n                                key={size}\r\n                                className={classNames({\r\n                                    'active': activeSize === index,\r\n                                    'disabled': !sizes.includes(size)\r\n                                })}\r\n                                onClick={() => onSelectSize(index)}>\r\n                                {size} см.\r\n                            </li>\r\n                        )}\r\n\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">от {price} ₽</div>\r\n                <Button onClick={handleAddPizza} className='button--add' outline>\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Добавить</span>\r\n                    {addedCount && <i>{addedCount}</i>}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default PizzaBlock\r\n\r\n","import * as React from 'react';\r\nimport {Button} from \"./index\";\r\n\r\nconst CartItem = ({id,name,type,size,totalPrice,totalCount,onRemoveCartItem,onMinus,onPlus}) => {\r\n\r\n    const handlePlusItem = () => {\r\n        onPlus(id)\r\n    }\r\n\r\n    const handleMinusItem = () => {\r\n        onMinus(id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart__item\">\r\n            <div className=\"cart__item-img\">\r\n                <img\r\n                    className=\"pizza-block__image\"\r\n                    src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\r\n                    alt=\"Pizza\"\r\n                />\r\n            </div>\r\n            <div className=\"cart__item-info\">\r\n                <h3>{name}</h3>\r\n                <p>{type} тесто, {size} см.</p>\r\n            </div>\r\n            <div className=\"cart__item-count\">\r\n                <div className=\"button button--outline button--circle cart__item-count-minus\">\r\n                    <svg onClick={handleMinusItem} width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                    </svg>\r\n\r\n                </div>\r\n                <b>{totalCount}</b>\r\n                <div className=\"button button--outline button--circle cart__item-count-plus\">\r\n                    <svg onClick={handlePlusItem} width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                    </svg>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"cart__item-price\">\r\n                <b>{totalPrice} ₽</b>\r\n            </div>\r\n            <div className=\"cart__item-remove\">\r\n                <Button onClick={() => onRemoveCartItem(id)} className=\"button button--outline button--circle\">\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"/>\r\n                    </svg>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartItem","export const action = {\r\n    setPizzas(items) {\r\n        return {\r\n            type:'SET_PIZZAS',\r\n            payload:items\r\n        }\r\n    },\r\n\r\n    setLoaded(loaded) {\r\n        return {\r\n            type:'SET_LOADED',\r\n            payload:loaded\r\n        }\r\n    }\r\n};\r\n\r\n","import axios from 'axios'\r\n\r\n export const api = {\r\n    getPizzas(sortBy,category) {\r\n        return axios.get(`https://pizza-magazine.herokuapp.com/pizzas?${category !==null ? `category=${category}`: ''}&_sort=${sortBy.type}&_order=${sortBy.order}`)\r\n    }\r\n};","import {action} from \"../actions/pizzas\";\r\nimport {api} from \"../../dal/api\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    isLoaded:false\r\n};\r\n\r\nfunction pizzasReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PIZZAS':\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isLoaded: true\r\n            };\r\n\r\n        case 'SET_LOADED':\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const getPizzas =  (sortBy,category) => async (dispatch) => {\r\n        dispatch(action.setLoaded(false));\r\n        let response = await api.getPizzas(sortBy,category);\r\n        dispatch(action.setPizzas(response.data));\r\n};\r\n\r\nexport {pizzasReducer};","\r\nimport * as React from 'react';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst LoadingBlock = (props) => {\r\n    return (\r\n        <ContentLoader\r\n            className=\"pizza-block\"\r\n            speed={2}\r\n            width={280}\r\n            height={460}\r\n            viewBox=\"0 0 280 460\"\r\n            backgroundColor=\"#f3f3f3\"\r\n            foregroundColor=\"#ecebeb\">\r\n            <circle cx=\"132\" cy=\"142\" r=\"115\" />\r\n            <rect x=\"0\" y=\"273\" rx=\"6\" ry=\"6\" width=\"280\" height=\"26\" />\r\n            <rect x=\"0\" y=\"310\" rx=\"6\" ry=\"6\" width=\"280\" height=\"84\" />\r\n            <rect x=\"0\" y=\"418\" rx=\"6\" ry=\"6\" width=\"91\" height=\"31\" />\r\n            <rect x=\"137\" y=\"408\" rx=\"25\" ry=\"25\" width=\"140\" height=\"46\" />\r\n        </ContentLoader>\r\n    );\r\n};\r\n\r\nexport default LoadingBlock","import React, {useEffect} from \"react\";\r\nimport {Categories, PizzaBlock, SortPopup} from \"../components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCategory, setSortBy} from \"../redux/actions/filters\";\r\nimport {getPizzas} from \"../redux/reducers/pizzas\";\r\nimport LoadingBlock from \"../components/PizzaBlock/LoadingBlock\";\r\nimport {addPizzaToCart} from \"../redux/actions/cart\";\r\n\r\nconst categoryNames = ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые'];\r\nconst sortItems = [\r\n    {name: 'популярности', type: 'popular',order:'desc'},\r\n    {name: 'цене', type: 'price',order:'desc'},\r\n    {name: 'алфавит', type: 'name',order:'asc'},\r\n];\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const {isLoaded, items} = useSelector(({pizzas}) => pizzas);\r\n    const {sortBy,category} = useSelector(({filters}) => filters);\r\n    const cartItems = useSelector(({cart}) => cart.items);\r\n\r\n    const onSelectCategory = React.useCallback((catIndex) => {\r\n        dispatch(setCategory(catIndex))\r\n    }, []);\r\n\r\n    const onSelectSortType = React.useCallback((sortType) => {\r\n        dispatch(setSortBy(sortType))\r\n    }, []);\r\n\r\n\r\n    const onAddPizzaToCart = React.useCallback((item) => {\r\n        dispatch(addPizzaToCart(item))\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getPizzas(sortBy,category))\r\n    }, [category,sortBy]);\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content__top\">\r\n                <Categories onClickCategory={onSelectCategory}\r\n                            activeCategory={category}\r\n                            items={categoryNames}/>\r\n                <SortPopup onClickSort={onSelectSortType}\r\n                           activeSortType={sortBy.type}\r\n                           items={sortItems}/>\r\n            </div>\r\n            <h2 className=\"content__title\">Все пиццы</h2>\r\n            <div className=\"content__items\">\r\n                {\r\n                    isLoaded\r\n                        ? items.map((item) => <PizzaBlock  onAddPizzaToCart={onAddPizzaToCart} addedCount={cartItems[item.id] && cartItems[item.id].items.length} key={item.id} {...item}/>)\r\n                        : Array(12).fill(0).map((_, index) => <LoadingBlock key={index}/>)\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home","export const setSortBy = ({type,order}) => ({\r\n    type: 'SET_SORT_BY',\r\n    payload: {type, order}\r\n});\r\n\r\nexport const setCategory = (catIndex) => ({\r\n    type: 'SET_CATEGORY',\r\n    payload: catIndex\r\n});\r\n","export const addPizzaToCart = (item) => {\r\n    return {\r\n        type:'ADD_PIZZA_TO_CART',\r\n        payload:item\r\n    }\r\n};\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: 'CLEAR_CART'\r\n    }\r\n}\r\n\r\nexport const removeCartItem = (itemId) => {\r\n    return {\r\n        type: 'REMOVE_CART_ITEM',\r\n        itemId\r\n    }\r\n}\r\n\r\nexport const plusCartItem = (itemId) => {\r\n    return {\r\n        type: 'PLUS_CART_ITEM',\r\n        itemId\r\n    }\r\n}\r\n\r\nexport const minusCartItem = (itemId) => {\r\n    return {\r\n        type: 'MINUS_CART_ITEM',\r\n        itemId\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {CartItem} from \"../components\";\r\nimport {clearCart,removeCartItem,plusCartItem,minusCartItem} from \"../redux/actions/cart\";\r\n\r\nimport emptyCard from '../assets/img/empty-cart.png'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Cart = () => {\r\n    const dispatch = useDispatch()\r\n    const {totalPrice, totalCount, items} = useSelector(({cart}) => cart)\r\n    const addedPizzas = Object.keys(items).map(key => {\r\n        return items[key].items[0];\r\n    });\r\n\r\n    const onClearCart = () => {\r\n        if (window.confirm('Вы действительно хотите очистить корзину?')) {\r\n            dispatch(clearCart())\r\n        }\r\n    }\r\n\r\n    const onRemoveCartItem = (id) => {\r\n        dispatch(removeCartItem(id))\r\n    }\r\n\r\n    const onPlusItem = (id) => {\r\n        dispatch(plusCartItem(id))\r\n    }\r\n\r\n    const onMinusItem = (id) => {\r\n        dispatch(minusCartItem(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container container--cart\">\r\n            {totalCount\r\n                ? <div className=\"cart\">\r\n                    <div className=\"cart__top\">\r\n                        <h2 className=\"content__title\">\r\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            </svg>\r\n                            Корзина\r\n                        </h2>\r\n                        <div className=\"cart__clear\">\r\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"/>\r\n                                <path\r\n                                    d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                    stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            </svg>\r\n\r\n                            <span onClick={onClearCart}>Очистить корзину</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content__items\">\r\n                        {addedPizzas.map(obj => <CartItem name={obj.name}\r\n                                                          id={obj.id}\r\n                                                          type={obj.type}\r\n                                                          size={obj.size}\r\n                                                          onMinus={onMinusItem}\r\n                                                          onPlus={onPlusItem}\r\n                                                          onRemoveCartItem={onRemoveCartItem}\r\n                                                          totalCount={items[obj.id].items.length}\r\n                                                          totalPrice={items[obj.id].totalPrice}/>)}\r\n                    </div>\r\n                    <div className=\"cart__bottom\">\r\n                        <div className=\"cart__bottom-details\">\r\n                            <span> Всего пицц: <b>{totalCount} шт.</b> </span>\r\n                            <span> Сумма заказа: <b>{totalPrice} ₽</b> </span>\r\n                        </div>\r\n                        <div className=\"cart__bottom-buttons\">\r\n                            <a href=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\"\r\n                                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\"\r\n                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                </svg>\r\n\r\n                                <span>Вернуться назад</span>\r\n                            </a>\r\n                            <div className=\"button pay-btn\">\r\n                                <span>Оплатить сейчас</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : <div className=\"container container--cart\">\r\n                    <div className=\"cart cart--empty\">\r\n                        <h2>Корзина пустая <icon>😕</icon></h2>\r\n                        <p>\r\n                            Вероятней всего, вы не заказывали ещё пиццу.<br/>\r\n                            Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n                        </p>\r\n                        <img src={emptyCard} alt=\"Empty cart\"/>\r\n                        <Link to=\"/\" className=\"button button--black\">\r\n                            <span>Вернуться назад</span>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart","import React from 'react';\r\nimport {Header} from \"./components\";\r\nimport {Cart, Home} from \"./pages\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"wrapper\">\r\n                <Header/>\r\n                <div className=\"content\">\r\n                    <Route path='/' component={Home}/>\r\n                    <Route path='/cart' component={Cart}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n","const initialState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0\r\n};\r\n\r\nconst getTotalPrice = arr => arr.reduce((sum, item) => item.price + sum, 0)\r\n\r\nfunction cartReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_PIZZA_TO_CART': {\r\n            const currentPizzaItems = !state.items[action.payload.id]\r\n                ? [action.payload]\r\n                : [...state.items[action.payload.id].items, action.payload];\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload.id]: {\r\n                    items: currentPizzaItems,\r\n                    totalPrice: getTotalPrice(currentPizzaItems)\r\n                }\r\n            };\r\n\r\n            const items = Object.values(newItems).map((obj) => obj.items)\r\n            const allPizzas = [].concat.apply([], items);\r\n            // const arr = Object.values(newItems).flat() // ПОЧИТАТЬ!\r\n            // Object values - создает массив из всех массивов в обьекте\r\n            // создаем новый массив, обьединяем все массивы в один,вызываем этот массив с помощью метода apply(почитать)\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount: allPizzas.length,\r\n                totalPrice: getTotalPrice(allPizzas)\r\n            }\r\n        }\r\n        case 'CLEAR_CART':\r\n            return {\r\n                ...state,\r\n                items:{},\r\n                totalPrice: 0,\r\n                totalCount: 0\r\n            }\r\n        case 'REMOVE_CART_ITEM':\r\n            const newItems = {\r\n                ...state.items\r\n            }\r\n            const currentTotalPrice = newItems[action.itemId].totalPrice\r\n            const currentTotalCount = newItems[action.itemId].items.length\r\n            delete newItems[action.itemId]\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalPrice: state.totalPrice - currentTotalPrice,\r\n                totalCount: state.totalCount - currentTotalCount\r\n            }\r\n\r\n        case 'PLUS_CART_ITEM': {\r\n            const newItems = [\r\n                ...state.items[action.itemId].items,\r\n                state.items[action.itemId].items[0]\r\n            ];\r\n            return {\r\n                ...state,\r\n                items:{\r\n                    ...state.items,\r\n                    [action.itemId]: {\r\n                        items: newItems,\r\n                        totalPrice: getTotalPrice(newItems)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        case 'MINUS_CART_ITEM': {\r\n            const oldItems = state.items[action.itemId].items\r\n            const newItems = oldItems.length > 1 ? state.items[action.itemId].items.slice(1) : oldItems;\r\n            return {\r\n                ...state,\r\n                items:{\r\n                    ...state.items,\r\n                    [action.itemId]: {\r\n                        items: newItems,\r\n                        totalPrice: getTotalPrice(newItems)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport {cartReducer};","const initialState = {\r\n    sortBy: {\r\n        type:'popular',\r\n        order:'desc'\r\n    },\r\n    category: null\r\n};\r\n\r\n\r\n\r\nfunction filtersReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_SORT_BY':\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload\r\n            };\r\n        case 'SET_CATEGORY':\r\n            return {\r\n                ...state,\r\n                category: action.payload\r\n            };\r\n    }\r\n    return state;\r\n}\r\n\r\nexport {filtersReducer};","import {applyMiddleware, combineReducers, createStore,compose} from \"redux\";\r\nimport {cartReducer} from \"./reducers/cart\";\r\nimport thunk from \"redux-thunk\";\r\nimport {pizzasReducer} from \"./reducers/pizzas\";\r\nimport {filtersReducer} from \"./reducers/filters\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    cart: cartReducer,\r\n    pizzas: pizzasReducer,\r\n    filters:filtersReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './scss/app.scss';\n\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}